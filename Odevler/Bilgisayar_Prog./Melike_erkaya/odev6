{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "toc_visible": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "zjRPhXn0i1OM"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#2\n",
        "def yıldız_değiştir(kelime_tablosu, hedef_kelime):\n",
        "\n",
        "  for i, kelime in enumerate(kelime_tablosu):\n",
        "    if kelime == hedef_kelime:\n",
        "      kelime_tablosu[i] = \"*\"\n",
        "\n",
        "  return kelime_tablosu\n",
        "  kelime_tablosu = [\"turuncu\", \"kırmzı\", \"mavi\", \"mor\", \"sarı\"]\n",
        "hedef_kelime = \"sarı\"\n",
        "\n",
        "değiştirilmiş_kelime_tablosu = yıldız_değiştir(kelime_tablosu, hedef_kelime)\n",
        "\n",
        "print(değiştirilmiş_kelime_tablosu)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 254
        },
        "id": "ujhztM2Yi217",
        "outputId": "59f21945-1786-4e3a-a507-068727af6536"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "error",
          "ename": "NameError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-4-f4669a0cea5d>\u001b[0m in \u001b[0;36m<cell line: 11>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      9\u001b[0m \u001b[0mhedef_kelime\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m\"sarı\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     10\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 11\u001b[0;31m \u001b[0mdeğiştirilmiş_kelime_tablosu\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0myıldız_değiştir\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkelime_tablosu\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mhedef_kelime\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     12\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     13\u001b[0m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdeğiştirilmiş_kelime_tablosu\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mNameError\u001b[0m: name 'kelime_tablosu' is not defined"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#3\n",
        "degerler = []\n",
        "for i in range(3):\n",
        "  deger = int(input(\"Lütfen bir değer girin (-1'e basarak çıkabilirsin): \"))\n",
        "  if deger == -1:\n",
        "    break\n",
        "  degerler.append(deger)\n",
        "\n",
        "\n",
        "limit = int(input(\"Lütfen bir limit girin: \"))\n",
        "\n",
        "\n",
        "limit_index = 0\n",
        "for i in range(len(degerler)):\n",
        "  if degerler[i] > limit:\n",
        "    limit_index = i\n",
        "    break\n",
        "\n",
        "\n",
        "degerler.pop(limit_index)\n",
        "\n",
        "\n",
        "print(degerler)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "mBiXaIpJkE-c",
        "outputId": "a9f5705e-d134-470a-e43b-f1f1117123d3"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Lütfen bir değer girin (-1'e basarak çıkabilirsin): 8\n",
            "Lütfen bir değer girin (-1'e basarak çıkabilirsin): 8\n",
            "Lütfen bir değer girin (-1'e basarak çıkabilirsin): 9\n",
            "Lütfen bir limit girin: 5\n",
            "[8, 9]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#4\n",
        "kelimeler = []\n",
        "for i in range(5):\n",
        "  kelime = input(\"Lütfen bir kelime girin: \")\n",
        "  kelimeler.append(kelime)\n",
        "\n",
        "kelimeler.reverse()\n",
        "\n",
        "for kelime in kelimeler:\n",
        "  if kelime[0].isupper():\n",
        "    print(kelime)\n",
        "\n",
        "en_kisa_kelime = kelimeler[0]\n",
        "for kelime in kelimeler:\n",
        "  if len(kelime) < len(en_kisa_kelime):\n",
        "    en_kisa_kelime = kelime\n",
        "\n",
        "print(\" en kısa kelime:\", en_kisa_kelime)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 254
        },
        "id": "_t8W39QGkzVx",
        "outputId": "1b4ed20c-6bed-4b75-d522-710951a472ca"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "error",
          "ename": "NameError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-11-3439f7bbeb44>\u001b[0m in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mk\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      2\u001b[0m \u001b[0melimeler\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mi\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mrange\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m5\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m   \u001b[0mkelime\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0minput\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Lütfen bir kelime girin: \"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m   \u001b[0mkelimeler\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mappend\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkelime\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mNameError\u001b[0m: name 'k' is not defined"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "tuple1 = (1, 2, 3, 4, 5)\n",
        "tuple2 = (3, 4, 5, 6, 7)\n",
        "\n",
        "  kesisim = kesisim(tuple1, tuple2)\n",
        "print(kesisim)\n",
        "def kesisim(tuple1, tuple2):\n",
        "  kesisim = set(tuple1) & set(tuple2)\n",
        "  return kesisim"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 254
        },
        "id": "osPiuORrnO9t",
        "outputId": "1e6cd6f9-c801-4f2f-be3e-f56db0f14dfe"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "error",
          "ename": "NameError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-17-f085910f3bea>\u001b[0m in \u001b[0;36m<cell line: 5>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 5\u001b[0;31m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkesisim\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      6\u001b[0m \u001b[0;32mdef\u001b[0m \u001b[0mkesisim\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtuple1\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtuple2\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      7\u001b[0m   \u001b[0mkesisim\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mset\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtuple1\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m&\u001b[0m \u001b[0mset\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtuple2\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mNameError\u001b[0m: name 'kesisim' is not defined"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "n1 = 12\n",
        "n2 = 24\n",
        "\n",
        "def ortak_bolen(n1, n2):\n",
        "    while n2 > 0:\n",
        "        n1, n2 = n2, n1 % n2\n",
        "        eb = n1\n",
        "        if eb == 1:\n",
        "            return (None, None)\n",
        "            return (eb, eb)\n",
        "\n",
        "\n"
      ],
      "metadata": {
        "id": "1Qm1dmmCn2xj"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}
